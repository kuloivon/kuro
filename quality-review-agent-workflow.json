{
  "name": "AI质量检验Agent工作流 - 逻辑检验与修改建议 (基于Gemini-DR格式重构)",
  "nodes": [
    {
      "parameters": {
        "content": "### quality_review_trigger()\n- 接收质量审核请求\n- 支持多种审核类型\n- 使用webhook触发器",
        "height": 400,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1580,
        -280
      ],
      "typeVersion": 1,
      "id": "review-trigger-note",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/quality-review",
        "options": {}
      },
      "id": "q1r2s3t4-u5v6-7890-abcd-ef1234567890",
      "name": "质量审核触发器",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [-1580, -60],
      "webhookId": "quality-review"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "config-1",
              "name": "max_revision_cycles",
              "value": 3,
              "type": "number"
            },
            {
              "id": "config-2",
              "name": "min_quality_score",
              "value": 7,
              "type": "number"
            },
            {
              "id": "config-3",
              "name": "current_date",
              "value": "={{$now.format('yyyy-LL-dd')}}",
              "type": "string"
            },
            {
              "id": "config-4",
              "name": "review_id",
              "value": "=review:quality-review:{{ $json.sessionId }}:",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1880,
        -60
      ],
      "id": "review-configs",
      "name": "Review Configs"
    },
    {
      "parameters": {
        "content": "### Review Configs\n- `max_revision_cycles` (*最大修订轮次*): 3\n- `min_quality_score` (*最低质量分数*): 7\n\n### variables:\n- `current_date`\n- `review_id`\n\n",
        "height": 300,
        "width": 340,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1980,
        -280
      ],
      "typeVersion": 1,
      "id": "review-configs-note",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1540,
        200
      ],
      "id": "review-gemini-model",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "sUx2BOKL53mwfOJl",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"writingResult\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"taskId\": {\n          \"type\": \"string\"\n        },\n        \"chapter\": {\n          \"type\": \"number\"\n        },\n        \"section\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"content\": {\n          \"type\": \"string\"\n        },\n        \"metadata\": {\n          \"type\": \"object\"\n        },\n        \"qualityCheck\": {\n          \"type\": \"object\"\n        }\n      }\n    },\n    \"reviewType\": {\n      \"type\": \"string\",\n      \"enum\": [\"quality_review\", \"logic_check\", \"consistency_check\", \"final_review\"],\n      \"description\": \"审核类型\"\n    },\n    \"sessionId\": {\n      \"type\": \"string\",\n      \"description\": \"会话ID\"\n    }\n  },\n  \"required\": [\"writingResult\", \"sessionId\"],\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -1260,
        180
      ],
      "id": "review-input-parser",
      "name": "Review Input Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=你是一个专业的质量审核系统。请分析用户请求并确定审核类型。

审核类型说明：
1. **quality_review**：标准质量审核
2. **logic_check**：逻辑一致性检查
3. **consistency_check**：跨章节一致性检查
4. **final_review**：最终审核

请根据输入确定正确的审核类型和相关信息。

输入内容：{{ $('质量审核触发器').item.json }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -1480,
        -60
      ],
      "id": "review-request-parser",
      "name": "Review Request Parser",
      "notesInFlow": true
    },
    {
      "parameters": {
        "content": "## initialize_review_process()\n\n初始化质量审核流程。\n- 确定审核级别和类型\n- 构建审核上下文\n- 准备审核数据\n- 设置审核参数",
        "height": 500,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1000,
        -420
      ],
      "typeVersion": 1,
      "id": "review-init-note",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// 初始化质量审核流程\nfor (const item of $input.all()) {\n  const writingResult = item.json.writingResult;\n  const reviewType = item.json.reviewType || 'quality_review';\n  \n  // 确定审核级别\n  const reviewLevel = {\n    'quality_review': 'standard',\n    'logic_check': 'comprehensive',\n    'consistency_check': 'cross_reference',\n    'final_review': 'thorough'\n  }[reviewType] || 'standard';\n  \n  // 构建审核上下文\n  const reviewContext = {\n    contentInfo: {\n      taskId: writingResult.taskId,\n      chapter: writingResult.chapter,\n      section: writingResult.section,\n      title: writingResult.title,\n      wordCount: writingResult.metadata.actualWordCount,\n      targetWordCount: writingResult.metadata.targetWordCount\n    },\n    content: writingResult.content,\n    previousQualityScore: writingResult.qualityCheck.score,\n    reviewLevel: reviewLevel,\n    reviewType: reviewType,\n    revisionHistory: writingResult.revisionHistory || [],\n    currentRevisionCycle: (writingResult.revisionCycle || 0) + 1\n  };\n  \n  item.json = {\n    reviewContext: reviewContext,\n    originalWritingResult: writingResult,\n    processingStage: 'review_initialization',\n    startedAt: new Date().toISOString()\n  };\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -800,
        -80
      ],
      "id": "review-process-initialization",
      "name": "审核流程初始化",
      "notesInFlow": true
    },
    {
      "parameters": {
        "content": "## perform_quality_review()\n\n使用Gemini模型进行质量审核。\n- 分析逻辑结构和论证\n- 检查语言表达质量\n- 评估学术规范性\n- 识别改进建议",
        "height": 500,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -600,
        -420
      ],
      "typeVersion": 1,
      "id": "quality-review-note",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"overallScore\": {\n      \"type\": \"number\",\n      \"minimum\": 1,\n      \"maximum\": 10,\n      \"description\": \"总体质量评分\"\n    },\n    \"qualityAssessment\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"logicScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"逻辑评分\"\n        },\n        \"contentScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"内容评分\"\n        },\n        \"languageScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"语言评分\"\n        },\n        \"structureScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"结构评分\"\n        },\n        \"citationScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"引用评分\"\n        },\n        \"originalityScore\": {\n          \"type\": \"number\",\n          \"minimum\": 1,\n          \"maximum\": 10,\n          \"description\": \"原创性评分\"\n        }\n      },\n      \"required\": [\"logicScore\", \"contentScore\", \"languageScore\", \"structureScore\", \"citationScore\", \"originalityScore\"]\n    },\n    \"issuesFound\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"问题类型\"\n          },\n          \"severity\": {\n            \"type\": \"string\",\n            \"enum\": [\"critical\", \"major\", \"minor\"],\n            \"description\": \"严重程度\"\n          },\n          \"location\": {\n            \"type\": \"string\",\n            \"description\": \"问题位置\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"问题描述\"\n          },\n          \"suggestion\": {\n            \"type\": \"string\",\n            \"description\": \"修改建议\"\n          }\n        },\n        \"required\": [\"type\", \"severity\", \"location\", \"description\", \"suggestion\"]\n      }\n    },\n    \"overallFeedback\": {\n      \"type\": \"string\",\n      \"description\": \"总体评价和建议\"\n    },\n    \"needsRevision\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否需要修订\"\n    },\n    \"approvedForNext\": {\n      \"type\": \"boolean\",\n      \"description\": \"是否批准进入下一阶段\"\n    }\n  },\n  \"required\": [\"overallScore\", \"qualityAssessment\", \"issuesFound\", \"overallFeedback\", \"needsRevision\", \"approvedForNext\"],\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -400,
        180
      ],
      "id": "quality-review-parser",
      "name": "Quality Review Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=你是一个专业的学术论文审核专家。你的任务是对论文章节内容进行全面的质量检验，包括逻辑一致性、论证充分性、语言规范性等方面。

审核标准：
1. **逻辑结构**：论证逻辑是否清晰，前后是否连贯
2. **内容质量**：是否符合学术规范，论据是否充分
3. **语言表达**：用词是否准确，表达是否专业
4. **结构完整性**：章节结构是否合理，内容是否完整
5. **引用规范**：引用格式是否正确，来源是否可靠
6. **原创性**：内容是否具有学术价值，避免重复和冗余

请审核以下论文章节内容：

## 章节信息
**章节：** 第{{ $json.reviewContext.contentInfo.chapter }}章
**小节：** {{ $json.reviewContext.contentInfo.section }} {{ $json.reviewContext.contentInfo.title }}
**字数：** {{ $json.reviewContext.contentInfo.wordCount }}/{{ $json.reviewContext.contentInfo.targetWordCount }}字
**审核类型：** {{ $json.reviewContext.reviewType }}
**审核级别：** {{ $json.reviewContext.reviewLevel }}
**修订轮次：** {{ $json.reviewContext.currentRevisionCycle }}

## 章节内容
{{ $json.reviewContext.content }}

{{ $json.reviewContext.revisionHistory.length > 0 ? '## 修订历史
' + $json.reviewContext.revisionHistory.map((rev, index) => `**第${index + 1}次修订：** ${rev.summary}`).join('
') : '' }}

请进行全面的质量审核并提供详细的反馈意见。",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -600,
        -60
      ],
      "id": "llm-quality-review",
      "name": "LLM质量审核",
      "notesInFlow": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// 处理质量审核结果\nfor (const item of $input.all()) {\n  try {\n    const reviewResult = item.json;\n    const reviewContext = $('审核流程初始化').first().json.reviewContext;\n    \n    // 分析审核结果\n    const qualityAnalysis = {\n      overallScore: reviewResult.overallScore,\n      detailedScores: reviewResult.qualityAssessment,\n      averageScore: (reviewResult.qualityAssessment.logicScore + \n                    reviewResult.qualityAssessment.contentScore + \n                    reviewResult.qualityAssessment.languageScore + \n                    reviewResult.qualityAssessment.structureScore + \n                    reviewResult.qualityAssessment.citationScore + \n                    reviewResult.qualityAssessment.originalityScore) / 6\n    };\n    \n    // 分类问题\n    const criticalIssues = reviewResult.issuesFound.filter(issue => \n      issue.severity === 'critical'\n    );\n    \n    const majorIssues = reviewResult.issuesFound.filter(issue => \n      issue.severity === 'major'\n    );\n    \n    const minorIssues = reviewResult.issuesFound.filter(issue => \n      issue.severity === 'minor'\n    );\n    \n    // 确定修订策略\n    const revisionStrategy = {\n      needsRevision: reviewResult.needsRevision,\n      revisionType: criticalIssues.length > 0 ? 'major_revision' : \n                   majorIssues.length > 0 ? 'moderate_revision' : \n                   minorIssues.length > 0 ? 'minor_revision' : 'no_revision',\n      priorityIssues: criticalIssues.concat(majorIssues).slice(0, 5),\n      estimatedTime: criticalIssues.length > 0 ? '2-3小时' : \n                    majorIssues.length > 0 ? '1-2小时' : \n                    minorIssues.length > 0 ? '30分钟-1小时' : '无需修订'\n    };\n    \n    // 构建审核报告\n    const reviewReport = {\n      reviewId: $('Review Configs').item.json.review_id,\n      sessionId: $('Review Request Parser').item.json.sessionId,\n      contentInfo: reviewContext.contentInfo,\n      qualityAnalysis: qualityAnalysis,\n      issuesAnalysis: {\n        totalIssues: reviewResult.issuesFound.length,\n        criticalIssues: criticalIssues.length,\n        majorIssues: majorIssues.length,\n        minorIssues: minorIssues.length,\n        issueDetails: reviewResult.issuesFound\n      },\n      revisionStrategy: revisionStrategy,\n      overallFeedback: reviewResult.overallFeedback,\n      approvedForNext: reviewResult.approvedForNext && qualityAnalysis.averageScore >= $('Review Configs').item.json.min_quality_score,\n      reviewMetadata: {\n        reviewType: reviewContext.reviewType,\n        reviewLevel: reviewContext.reviewLevel,\n        revisionCycle: reviewContext.currentRevisionCycle,\n        reviewedAt: new Date().toISOString()\n      },\n      processingStage: 'review_completed',\n      status: 'completed'\n    };\n    \n    item.json = {\n      reviewReport: reviewReport,\n      originalReviewResult: reviewResult,\n      processingStage: 'review_processed',\n      success: true\n    };\n    \n  } catch (error) {\n    item.json = {\n      error: '质量审核处理失败',\n      errorMessage: error.message,\n      originalResponse: item.json,\n      processingStage: 'processing_failed'\n    };\n  }\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        -60
      ],
      "id": "quality-review-result-processor",
      "name": "质量审核结果处理",
      "notesInFlow": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "={{ $json.reviewReport.needsRevision }}",
            "operation": "equal",
            "rightValue": "true"
          }
        }
      },
      "id": "revision-needed-check",
      "name": "检查是否需要修订",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [-200, -60]
    },
    {
      "parameters": {
        "content": "## trigger_revision_workflow()\n\n触发修订工作流。\n- 将审核结果发送给写作Agent\n- 启动内容修订流程\n- 传递修订建议和要求",
        "height": 400,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        -420
      ],
      "typeVersion": 1,
      "id": "revision-trigger-note",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/writing-agent",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "revisionRequest",
              "value": "={{ $json.reviewReport }}"
            },
            {
              "name": "sessionId",
              "value": "={{ $json.reviewReport.sessionId }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "trigger-revision-workflow",
      "name": "触发修订工作流",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [0, -60]
    },
    {
      "parameters": {
        "content": "## trigger_assembly_workflow()\n\n触发整合工作流。\n- 将审核通过的内容发送给整合系统\n- 启动论文整合流程\n- 传递已批准内容",
        "height": 400,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        20
      ],
      "typeVersion": 1,
      "id": "assembly-trigger-note",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/final-assembly",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "add_approved_content"
            },
            {
              "name": "content",
              "value": "={{ $json.reviewReport }}"
            },
            {
              "name": "sessionId",
              "value": "={{ $json.reviewReport.sessionId }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "trigger-assembly-workflow",
      "name": "触发整合工作流",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [0, 20]
    },
    {
      "parameters": {
        "content": "## final_output()\n\n生成最终输出结果。\n- 返回质量审核报告\n- 提供处理状态信息\n- 包含后续流程指导",
        "height": 300,
        "width": 440,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        200,
        -420
      ],
      "typeVersion": 1,
      "id": "final-output-note",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// 生成最终输出\nfor (const item of $input.all()) {\n  const result = {\n    success: true,\n    message: '质量审核完成',\n    data: {\n      reviewReport: item.json.reviewReport,\n      nextStep: item.json.reviewReport.needsRevision ? 'revision' : 'assembly'\n    },\n    timestamp: new Date().toISOString(),\n    processingTime: new Date() - new Date($('Review Request Parser').item.json.timestamp || Date.now())\n  };\n  \n  item.json = result;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        -60
      ],
      "id": "final-output-generator",
      "name": "最终输出生成器",
      "notesInFlow": true
    }
  ],
  "connections": {
    "质量审核触发器": {
      "main": [
        [
          {
            "node": "Review Request Parser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Review Configs": {
      "main": [
        []
      ]
    },
    "Review Request Parser": {
      "main": [
        [
          {
            "node": "审核流程初始化",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "审核流程初始化": {
      "main": [
        [
          {
            "node": "LLM质量审核",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LLM质量审核": {
      "main": [
        [
          {
            "node": "质量审核结果处理",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "质量审核结果处理": {
      "main": [
        [
          {
            "node": "检查是否需要修订",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "检查是否需要修订": {
      "main": [
        [
          {
            "node": "触发修订工作流",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "触发整合工作流",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "触发修订工作流": {
      "main": [
        [
          {
            "node": "最终输出生成器",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "触发整合工作流": {
      "main": [
        [
          {
            "node": "最终输出生成器",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "review-workflow",
      "name": "质量审核"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1.0.0"
}